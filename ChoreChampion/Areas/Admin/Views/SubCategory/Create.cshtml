@model ChoreChampion.Models.ViewModels.SubCategoryAndCategoryViewModel
@using ChoreChampion.Extensions
@{
    ViewData["Title"] = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<br />
<h2 class="text-white header-bold">Create Sub Category</h2>
<br />

<partial name="_StatusMessage" model="Model.StatusMessage" />

<div class="border backgroundWhite row">
    <div class="col-8 border-right">
        <form asp-action="Create">

            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group row">
                <div class="col-3">
                    <label asp-for="SubCategory.CategoryId" class="col-form-label"></label>
                </div>
                <div class="col-5">
                    <select id="ddlCategoryList" asp-for="SubCategory.CategoryId" asp-items="Model.CategoryList.ToSelectListItem(Model.SubCategory.CategoryId)" class="form-control"></select>
                </div>
            </div>
            <div class="form-group row">
                <div class="col-3">
                    <label asp-for="SubCategory.Name" class="col-form-label"></label>
                </div>
                <div class="col-5">
                    <input asp-for="SubCategory.Name" class="form-control" />
                </div>
                <span asp-validation-for="SubCategory.Name" class="text-danger"></span>
            </div>
            <div class="form-group row">
                <div class="col-5 offset-3">
                    <partial name="_CreateAndBackToListButtonsPartial" />
                </div>
            </div>
        </form>
    </div>
    <div class="col-3 offset-1">
        @if (Model.SubCategoryList.Count() > 0)
        {
            <p>Existing Sub Categories:</p>
            <div id="SubCategoryList">
                <ul class="list-group list-group-flush"></ul>
            </div>
        }
    </div>
</div>

@section Scripts {
    @{ await Html.RenderPartialAsync("_ValidationScriptsPartial");}

    <script>
        function updateSubCategoryList() {

            // Get the current category selected id
            let categorySelected = document.getElementById("ddlCategoryList").value;

            // Reference to our subcategory list div
            $list = $('#SubCategoryList');

            // Call the GetSubCategory action, passing along the category selected id as a parameter, parse the JSON results and iterate through the results, appending each subcategory to our list
            $.ajax({
                url: '/Admin/SubCategory/GetSubCategory/' + categorySelected,
                type: 'GET',
                dataType: 'text',
                success: function (data) {
                    results = JSON.parse(data);
                    $list.html('');
                    let html = '<ul class="list-group list-group-flush">';
                    for (i in results) {
                        html += '<li class="list-group-item non-bold-text"> ' + results[i].text + '</li>';
                    }
                    html += '</ul>'
                    $list.append(html);
                }
            });
        }

        // When the page first loads we will call the function to update our subcategory list on the side
        $(document).ready(function () {
            updateSubCategoryList();
        });

        // When the selected category changes, we call the function again to update the subcategory list to reflect newly chosen category
        $("#ddlCategoryList").on("change", function () {
            updateSubCategoryList();
        });
    </script>
}